{
  "questions": [
    {
      "id": 1,
      "title": "V·ª• √Ån M√†n H√¨nh Tr·∫Øng",
      "scenario": "M·ªôt ·ª©ng d·ª•ng Android b·ªã crash khi m·ªü m√†n h√¨nh ch√≠nh.\nDev Minh ph·ª• tr√°ch UI.\nQA H∆∞∆°ng l√†m testing.\nLead Tu·∫•n review code.",
      "statements": [
        "Minh: 'Activity c·ªßa t√¥i ƒë√£ handle ƒë·∫ßy ƒë·ªß lifecycle r·ªìi.'",
        "H∆∞∆°ng: 'App ch·∫°y b√¨nh th∆∞·ªùng tr√™n m√°y test c·ªßa t√¥i.'",
        "Tu·∫•n: 'T√¥i th·∫•y kh√¥ng c√≥ g·ªçi super.onCreate() trong Activity.'"
      ],
      "question": "Ai ƒëang n√≥i th·∫≠t v·ªÅ nguy√™n nh√¢n crash?",
      "difficulty": "easy",
      "language": "kotlin",
      "category": "android",
      "hints": [
        "Ki·ªÉm tra logcat khi app crash üîç",
        "onCreate() l√† method quan tr·ªçng trong Activity lifecycle",
        "Th·ª≠ ch·∫°y app tr√™n nhi·ªÅu device kh√°c nhau"
      ],
      "answers": [
        { "id": 1, "text": "Minh n√≥i th·∫≠t" },
        { "id": 2, "text": "H∆∞∆°ng n√≥i th·∫≠t" },
        { "id": 3, "text": "Tu·∫•n n√≥i th·∫≠t" }
      ],
      "correctAnswer": 3,
      "explanation": {
        "logic": "Tu·∫•n n√≥i th·∫≠t v√¨ thi·∫øu super.onCreate() s·∫Ω g√¢y crash app. Minh n√≥i kh√¥ng ƒë√∫ng v·ªÅ handle lifecycle. H∆∞∆°ng c√≥ th·ªÉ ƒë√£ test tr√™n version c≈©.",
        "technicalDetails": "super.onCreate() l√† b·∫Øt bu·ªôc trong Activity, n·∫øu kh√¥ng g·ªçi s·∫Ω g√¢y crash khi kh·ªüi t·∫°o view hierarchy."
      }
    },
    {
      "id": 2,
      "title": "B√≠ ·∫®n Tr√†n B·ªô Nh·ªõ",
      "scenario": "App b·ªã OutOfMemoryError sau v√†i ph√∫t s·ª≠ d·ª•ng.\nDev An l√†m ph·∫ßn load ·∫£nh.\nQA Mai test performance.\nLead ƒê·ª©c review memory usage.",
      "statements": [
        "An: 'T√¥i ƒë√£ d√πng Glide ƒë·ªÉ load t·∫•t c·∫£ ·∫£nh.'",
        "Mai: 'Memory usage tƒÉng ƒë·ªÅu, kh√¥ng c√≥ spike b·∫•t th∆∞·ªùng.'",
        "ƒê·ª©c: 'C√≥ memory leak trong RecyclerView Adapter.'"
      ],
      "question": "Ai ƒëang n√≥i ƒë√∫ng v·ªÅ v·∫•n ƒë·ªÅ memory?",
      "difficulty": "easy",
      "language": "kotlin",
      "category": "android",
      "hints": [
        "Ki·ªÉm tra c√°ch gi·∫£i ph√≥ng ViewHolder trong Adapter",
        "Glide t·ª± ƒë·ªông manage memory cache",
        "S·ª≠ d·ª•ng Android Profiler ƒë·ªÉ theo d√µi memory"
      ],
      "answers": [
        { "id": 1, "text": "An n√≥i th·∫≠t" },
        { "id": 2, "text": "Mai n√≥i th·∫≠t" },
        { "id": 3, "text": "ƒê·ª©c n√≥i th·∫≠t" }
      ],
      "correctAnswer": 3,
      "explanation": {
        "logic": "ƒê·ª©c n√≥i th·∫≠t v√¨ memory leak trong RecyclerView Adapter l√† nguy√™n nh√¢n ph·ªï bi·∫øn g√¢y OOM. An d√πng Glide nh∆∞ng c√≥ th·ªÉ implement sai. Mai kh√¥ng ph√°t hi·ªán ƒë∆∞·ª£c leak.",
        "technicalDetails": "RecyclerView Adapter c·∫ßn clear references trong onViewRecycled() ƒë·ªÉ tr√°nh memory leak."
      }
    },
    {
      "id": 3,
      "title": "–ó–∞–≥–∞–¥–∫–∞ M·∫•t D·ªØ Li·ªáu",
      "scenario": "App b·ªã m·∫•t data sau khi rotate m√†n h√¨nh.\nDev Linh l√†m feature l∆∞u state.\nQA T√πng test rotation.\nLead Nam review architecture.",
      "statements": [
        "Linh: 'T√¥i ƒë√£ l∆∞u data v√†o Bundle trong onSaveInstanceState.'",
        "T√πng: 'Rotation ho·∫°t ƒë·ªông t·ªët tr√™n Android 11.'",
        "Nam: 'ViewModel kh√¥ng ƒë∆∞·ª£c s·ª≠ d·ª•ng ƒë√∫ng c√°ch.'"
      ],
      "question": "Ai n√≥i th·∫≠t v·ªÅ vi·ªác handle configuration changes?",
      "difficulty": "easy",
      "language": "kotlin",
      "category": "android",
      "hints": [
        "ViewModel t·ª± survive qua configuration changes",
        "Bundle c√≥ gi·ªõi h·∫°n k√≠ch th∆∞·ªõc data",
        "Test rotation tr√™n nhi·ªÅu Android version"
      ],
      "answers": [
        { "id": 1, "text": "Linh n√≥i th·∫≠t" },
        { "id": 2, "text": "T√πng n√≥i th·∫≠t" },
        { "id": 3, "text": "Nam n√≥i th·∫≠t" }
      ],
      "correctAnswer": 3,
      "explanation": {
        "logic": "Nam n√≥i th·∫≠t v√¨ kh√¥ng s·ª≠ d·ª•ng ViewModel ƒë√∫ng c√°ch s·∫Ω g√¢y m·∫•t data. Linh d√πng Bundle kh√¥ng ph·∫£i gi·∫£i ph√°p t·ªëi ∆∞u. T√πng test ch∆∞a ƒë·ªß c√°c version.",
        "technicalDetails": "ViewModel ƒë∆∞·ª£c thi·∫øt k·∫ø ƒë·ªÉ gi·ªØ UI data qua configuration changes, kh√¥ng c·∫ßn d√πng onSaveInstanceState cho data l·ªõn."
      }
    },
    {
      "id": 4,
      "title": "V·ª• √Ån Notification Bi·∫øn M·∫•t",
      "scenario": "Notification kh√¥ng hi·ªÉn th·ªã tr√™n Android 13.\nDev H√† implement notification.\nQA D≈©ng test notification.\nLead Th·∫£o review permissions.",
      "statements": [
        "H√†: 'T√¥i ƒë√£ th√™m ƒë·∫ßy ƒë·ªß code hi·ªÉn th·ªã notification.'",
        "D≈©ng: 'Notification ho·∫°t ƒë·ªông t·ªët tr√™n Android 12.'",
        "Th·∫£o: 'Thi·∫øu runtime permission cho notification t·ª´ Android 13.'"
      ],
      "question": "Ai n√≥i th·∫≠t v·ªÅ v·∫•n ƒë·ªÅ notification?",
      "difficulty": "easy",
      "language": "kotlin",
      "category": "android",
      "hints": [
        "Android 13 y√™u c·∫ßu POST_NOTIFICATIONS permission",
        "Check AndroidManifest.xml cho permissions",
        "Test notification tr√™n c√°c Android version kh√°c nhau"
      ],
      "answers": [
        { "id": 1, "text": "H√† n√≥i th·∫≠t" },
        { "id": 2, "text": "D≈©ng n√≥i th·∫≠t" },
        { "id": 3, "text": "Th·∫£o n√≥i th·∫≠t" }
      ],
      "correctAnswer": 3,
      "explanation": {
        "logic": "Th·∫£o n√≥i th·∫≠t v√¨ Android 13 b·∫Øt bu·ªôc c√≥ runtime permission cho notifications. H√† ch∆∞a implement ƒë·∫ßy ƒë·ªß. D≈©ng test ƒë√∫ng nh∆∞ng ch∆∞a ƒë·ªß.",
        "technicalDetails": "T·ª´ Android 13 (API 33), POST_NOTIFICATIONS permission l√† b·∫Øt bu·ªôc v√† ph·∫£i ƒë∆∞·ª£c request runtime."
      }
    },
    {
      "id": 5,
      "title": "B√≠ ·∫®n Layout V·ª°",
      "scenario": "UI b·ªã v·ª° tr√™n m·ªôt s·ªë ƒëi·ªán tho·∫°i.\nDev Ph∆∞∆°ng l√†m UI.\nQA Ho√†ng test compatibility.\nLead Vi·ªát review layouts.",
      "statements": [
        "Ph∆∞∆°ng: 'T√¥i ƒë√£ d√πng ConstraintLayout cho t·∫•t c·∫£ m√†n h√¨nh.'",
        "Ho√†ng: 'UI hi·ªÉn th·ªã ƒë·∫πp tr√™n Pixel devices.'",
        "Vi·ªát: 'Layout ƒëang d√πng hardcoded dimensions.'"
      ],
      "question": "Ai n√≥i th·∫≠t v·ªÅ v·∫•n ƒë·ªÅ layout?",
      "difficulty": "easy",
      "language": "kotlin",
      "category": "android",
      "hints": [
        "Check layout files cho hardcoded values",
        "ConstraintLayout kh√¥ng ƒë·∫£m b·∫£o UI kh√¥ng b·ªã v·ª°",
        "Test tr√™n nhi·ªÅu screen sizes v√† densities"
      ],
      "answers": [
        { "id": 1, "text": "Ph∆∞∆°ng n√≥i th·∫≠t" },
        { "id": 2, "text": "Ho√†ng n√≥i th·∫≠t" },
        { "id": 3, "text": "Vi·ªát n√≥i th·∫≠t" }
      ],
      "correctAnswer": 3,
      "explanation": {
        "logic": "Vi·ªát n√≥i th·∫≠t v√¨ hardcoded dimensions s·∫Ω g√¢y v·ª° UI tr√™n c√°c m√†n h√¨nh kh√°c nhau. Ph∆∞∆°ng d√πng ConstraintLayout nh∆∞ng implement ch∆∞a ƒë√∫ng. Ho√†ng test ch∆∞a ƒë·ªß devices.",
        "technicalDetails": "N√™n s·ª≠ d·ª•ng dp, sp v√† dimension resources thay v√¨ hardcoded pixels ƒë·ªÉ support nhi·ªÅu m√†n h√¨nh."
      }
    },
    {
      "id": 6,
      "title": "V·ª• √Ån Crash ƒê·ªôt Ng·ªôt",
      "scenario": "App crash khi click n√∫t share.\nDev T√¢m l√†m feature share.\nQA Nga test functionality.\nLead S∆°n review error handling.",
      "statements": [
        "T√¢m: 'T√¥i ƒë√£ check null tr∆∞·ªõc khi share.'",
        "Nga: 'Feature share ho·∫°t ƒë·ªông t·ªët tr√™n m√°y t√¥i.'",
        "S∆°n: 'Kh√¥ng c√≥ try-catch block trong code share.'"
      ],
      "question": "Ai n√≥i th·∫≠t v·ªÅ nguy√™n nh√¢n crash?",
      "difficulty": "easy",
      "language": "kotlin",
      "category": "android",
      "hints": [
        "ActivityNotFoundException c√≥ th·ªÉ x·∫£y ra khi share",
        "Null check kh√¥ng ƒë·ªß ƒë·ªÉ prevent t·∫•t c·∫£ crashes",
        "Test tr√™n device kh√¥ng c√≥ apps ƒë·ªÉ handle share"
      ],
      "answers": [
        { "id": 1, "text": "T√¢m n√≥i th·∫≠t" },
        { "id": 2, "text": "Nga n√≥i th·∫≠t" },
        { "id": 3, "text": "S∆°n n√≥i th·∫≠t" }
      ],
      "correctAnswer": 3,
      "explanation": {
        "logic": "S∆°n n√≥i th·∫≠t v√¨ thi·∫øu try-catch s·∫Ω g√¢y crash khi kh√¥ng c√≥ app ƒë·ªÉ handle share intent. T√¢m ch·ªâ check null l√† ch∆∞a ƒë·ªß. Nga test tr√™n device c√≥ ƒë·ªß apps.",
        "technicalDetails": "Share functionality c·∫ßn handle ActivityNotFoundException v√† c√°c exceptions kh√°c c√≥ th·ªÉ x·∫£y ra."
      }
    },
    {
      "id": 7,
      "title": "B√≠ ·∫®n Battery Drain",
      "scenario": "App ti√™u t·ªën pin b·∫•t th∆∞·ªùng.\nDev Qu√¢n l√†m background tasks.\nQA H·∫±ng test performance.\nLead Trung review services.",
      "statements": [
        "Qu√¢n: 'T√¥i ƒë√£ d√πng WorkManager cho t·∫•t c·∫£ tasks.'",
        "H·∫±ng: 'Battery usage b√¨nh th∆∞·ªùng trong 1 gi·ªù test.'",
        "Trung: 'C√≥ m·ªôt ForegroundService ch·∫°y li√™n t·ª•c.'"
      ],
      "question": "Ai n√≥i th·∫≠t v·ªÅ v·∫•n ƒë·ªÅ pin?",
      "difficulty": "easy",
      "language": "kotlin",
      "category": "android",
      "hints": [
        "Check Service lifecycle trong code",
        "WorkManager t·ªëi ∆∞u cho battery life",
        "Test battery usage trong th·ªùi gian d√†i h∆°n"
      ],
      "answers": [
        { "id": 1, "text": "Qu√¢n n√≥i th·∫≠t" },
        { "id": 2, "text": "H·∫±ng n√≥i th·∫≠t" },
        { "id": 3, "text": "Trung n√≥i th·∫≠t" }
      ],
      "correctAnswer": 3,
      "explanation": {
        "logic": "Trung n√≥i th·∫≠t v√¨ ForegroundService ch·∫°y li√™n t·ª•c s·∫Ω t·ªën pin. Qu√¢n ch∆∞a chuy·ªÉn h·∫øt tasks sang WorkManager. H·∫±ng test ch∆∞a ƒë·ªß th·ªùi gian.",
        "technicalDetails": "ForegroundService n√™n ƒë∆∞·ª£c stop khi kh√¥ng c·∫ßn thi·∫øt, WorkManager l√† l·ª±a ch·ªçn t·ªët h∆°n cho background tasks."
      }
    },
    {
      "id": 8,
      "title": "V·ª• √Ån M·∫•t K·∫øt N·ªëi",
      "scenario": "App kh√¥ng update data khi c√≥ Internet tr·ªü l·∫°i.\nDev B√¨nh l√†m network handling.\nQA Lan test connectivity.\nLead C∆∞·ªùng review implementation.",
      "statements": [
        "B√¨nh: 'T√¥i ƒë√£ check Internet b·∫±ng ConnectivityManager.'",
        "Lan: 'App update data ngay khi b·∫≠t Wifi.'",
        "C∆∞·ªùng: 'Kh√¥ng c√≥ broadcast receiver cho network changes.'"
      ],
      "question": "Ai n√≥i th·∫≠t v·ªÅ v·∫•n ƒë·ªÅ connectivity?",
      "difficulty": "easy",
      "language": "kotlin",
      "category": "android",
      "hints": [
        "Check c√°ch register network callback",
        "ConnectivityManager.NetworkCallback l√† recommended approach",
        "Test v·ªõi airplane mode v√† different network states"
      ],
      "answers": [
        { "id": 1, "text": "B√¨nh n√≥i th·∫≠t" },
        { "id": 2, "text": "Lan n√≥i th·∫≠t" },
        { "id": 3, "text": "C∆∞·ªùng n√≥i th·∫≠t" }
      ],
      "correctAnswer": 3,
      "explanation": {
        "logic": "C∆∞·ªùng n√≥i th·∫≠t v√¨ thi·∫øu broadcast receiver s·∫Ω kh√¥ng detect ƒë∆∞·ª£c network changes. B√¨nh ch·ªâ check Internet l√† ch∆∞a ƒë·ªß. Lan test ch∆∞a ƒë√∫ng scenarios.",
        "technicalDetails": "C·∫ßn implement NetworkCallback ho·∫∑c broadcast receiver ƒë·ªÉ handle network state changes properly."
      }
    },
    {
      "id": 9,
      "title": "B√≠ ·∫®n Permission Loop",
      "scenario": "App li√™n t·ª•c xin camera permission.\nDev Th√†nh l√†m camera feature.\nQA Y·∫øn test permissions.\nLead Huy review permission flow.",
      "statements": [
        "Th√†nh: 'T√¥i ƒë√£ check permission tr∆∞·ªõc khi m·ªü camera.'",
        "Y·∫øn: 'Permission flow ho·∫°t ƒë·ªông t·ªët khi allow.'",
        "Huy: 'Kh√¥ng l∆∞u tr·∫°ng th√°i permission ƒë√£ deny.'"
      ],
      "question": "Ai n√≥i th·∫≠t v·ªÅ v·∫•n ƒë·ªÅ permission?",
      "difficulty": "easy",
      "language": "kotlin",
      "category": "android",
      "hints": [
        "Check c√°ch handle permission result",
        "SharedPreferences c√≥ th·ªÉ d√πng ƒë·ªÉ l∆∞u permission state",
        "Test v·ªõi c√°c tr∆∞·ªùng h·ª£p deny v√† don't ask again"
      ],
      "answers": [
        { "id": 1, "text": "Th√†nh n√≥i th·∫≠t" },
        { "id": 2, "text": "Y·∫øn n√≥i th·∫≠t" },
        { "id": 3, "text": "Huy n√≥i th·∫≠t" }
      ],
      "correctAnswer": 3,
      "explanation": {
        "logic": "Huy n√≥i th·∫≠t v√¨ kh√¥ng l∆∞u tr·∫°ng th√°i deny s·∫Ω g√¢y loop. Th√†nh ch·ªâ check permission l√† ch∆∞a ƒë·ªß. Y·∫øn test ch∆∞a ƒë·ªß c√°c cases.",
        "technicalDetails": "C·∫ßn l∆∞u tr·∫°ng th√°i permission ƒë·ªÉ tr√°nh xin l·∫°i permission khi user ƒë√£ deny, v√† show appropriate message."
      }
    },
    {
      "id": 10,
      "title": "V·ª• √Ån Duplicate Items",
      "scenario": "RecyclerView hi·ªÉn th·ªã duplicate items sau refresh.\nDev D∆∞∆°ng l√†m list feature.\nQA Nhung test list behavior.\nLead Khoa review adapter code.",
      "statements": [
        "D∆∞∆°ng: 'T√¥i ƒë√£ clear list tr∆∞·ªõc khi add items m·ªõi.'",
        "Nhung: 'List hi·ªÉn th·ªã ƒë√∫ng sau khi pull to refresh.'",
        "Khoa: 'DiffUtil kh√¥ng ƒë∆∞·ª£c implement ƒë√∫ng.'"
      ],
      "question": "Ai n√≥i th·∫≠t v·ªÅ v·∫•n ƒë·ªÅ duplicate?",
      "difficulty": "easy",
      "language": "kotlin",
      "category": "android",
      "hints": [
        "Check DiffUtil.Callback implementation",
        "Clear list kh√¥ng ph·∫£i l√† best practice",
        "Test v·ªõi nhi·ªÅu lo·∫°i data changes"
      ],
      "answers": [
        { "id": 1, "text": "D∆∞∆°ng n√≥i th·∫≠t" },
        { "id": 2, "text": "Nhung n√≥i th·∫≠t" },
        { "id": 3, "text": "Khoa n√≥i th·∫≠t" }
      ],
      "correctAnswer": 3,
      "explanation": {
        "logic": "Khoa n√≥i th·∫≠t v√¨ DiffUtil kh√¥ng ƒë√∫ng s·∫Ω g√¢y duplicate items. D∆∞∆°ng d√πng c√°ch clear list l√† kh√¥ng t·ªëi ∆∞u. Nhung test ch∆∞a ƒë·ªß cases.",
        "technicalDetails": "DiffUtil.Callback c·∫ßn implement ƒë√∫ng areItemsTheSame() v√† areContentsTheSame() ƒë·ªÉ handle updates correctly."
      }
    }
  ]
}